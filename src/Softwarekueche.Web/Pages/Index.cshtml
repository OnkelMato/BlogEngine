@page
@using Microsoft.AspNetCore.Html
@model IndexModel
@{
    ViewData["Title"] = "Home";
}

<div class="row">
    @foreach (var item in Model.Posts)
    {
        <div class="card box">
            <h6>@Html.DisplayFor(modelItem => item.UpdatedAt)</h6>
            <h1>
                @Html.DisplayFor(modelItem => item.Title)
            </h1>
            <div>
                @(new HtmlString(item.HtmlPreview))
            </div>
            @if (item.HasContent)
            {
                <div class="button">
                    <a href="@item.DetailLink" class="button">
                        <i class="bi bi-arrow-right-circle"></i>
                    </a>
                </div>
            }
        </div>
    }
</div>
<div class="d-flex justify-content-center">
    <nav aria-label="">
        <ul class="pagination">
            @if (Model.CurrentPage != 1)
            {
                <li class="page-item"><a class="page-link" href="?CurrentPage=1"><i class="bi bi-skip-start-circle"></i></a></li>
            }
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item"><a class="page-link" href="?CurrentPage=@(Model.CurrentPage - 1)"><i class="bi bi-arrow-right-circle"></i></a></li>
            }
            @for (int i = 1; i <= Model.NumOfPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? " active" : "")"><a class="page-link" href="?CurrentPage=@(i)">@(i)</a></li>
            }
            @if (Model.CurrentPage < Model.NumOfPages)
            {
                <li class="page-item"><a class="page-link" href="?CurrentPage=@(Model.CurrentPage + 1)"><i class="bi bi-arrow-right-circle"></i></a></li>
            }
            @if (Model.CurrentPage != Model.NumOfPages)
            {
                <li class="page-item"><a class="page-link" href="?CurrentPage=@Model.NumOfPages"><i class="bi bi-skip-end-circle"></i></a></li>
            }
        </ul>
    </nav>
</div>